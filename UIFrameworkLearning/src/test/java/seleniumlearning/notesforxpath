what is meant by xpath:


XPath in Selenium is an XML path used for navigation through the HTML structure 
of the page. It is a syntax or language for finding any element on a web page 
using XML path expression. XPath can be used for both HTML and XML documents to 
find the location of any element on a webpage using HTML DOM structure.

In Selenium automation, if the elements are not found by the general locators 
like id, class, name, etc. then XPath is used to find an element on the web page.

In this tutorial, we will learn about the Xpath and different XPath expression 
to find the complex or dynamic elements, whose attributes changes dynamically 
on refresh or any operations.

Syntax xpath:

              xpath = //tagname[@attribute='value']

// : Select current node.
Tagname: Tagname of the particular node.
@: Select attribute.
Attribute: Attribute name of the node.
Value: Value of the attribute.

types of xpath:
1)Absolute Xpath
2)Relative Xpath

Absolute XPath:
It is the direct way to find the element, but the disadvantage of 
the absolute XPath is that if there are any changes made in the path of 
the element then that XPath gets failed.

The key characteristic of XPath is that it begins with the single forward slash(/) ,
which means you can select the element from the root node.

Below is the example of an absolute Xpath expression of the element 
shown in the below screen.

XPath exercise on this http://demo.guru99.com/test/selenium-xpath.html


Relative Xpath:
Relative Xpath starts from the middle of HTML DOM structure. It starts with double forward slash (//). 
It can search elements anywhere on the webpage, means no need to write a 
long xpath and you can start from the middle of HTML DOM structure. 
Relative Xpath is always preferred as it is not a complete path 
from the root element.

Below is the example of a relative XPath expression of the same element 
shown in the below screen. This is the common format used to 
find element by XPath.

1) Basic XPath:
XPath expression select nodes or list of nodes on the basis of attributes like ID , Name, Classname, etc. from the XML document as illustrated below.

Xpath=//input[@name='uid']


2) Contains():

Contains() is a method used in XPath expression. It is used when the 
value of any attribute changes dynamically, for example, login information.

The contain feature has an ability to find the element with partial text 
as shown in below XPath example.

In this example, we tried to identify the element by just using 
partial text value of the attribute. In the below XPath expression partial value 
‘sub’ is used in place of submit button. It can be observed that 
the element is found successfully.

Complete value of ‘Type’ is ‘submit’ but using only partial value ‘sub’.

Xpath=//*[contains(@type,'sub')]

Similarly, in the below expression, we have taken the ‘id’ as an attribute and 
‘message’ as a partial value. This will find 2 elements (‘User-ID must not be 
blank’ & ‘Password must not be blank’) as its ‘id’ attribute begins with 
‘message’.

Xpath=//*[contains(@id,'message')]

Xpath=//*[contains(text(),'here')]
Xpath=//*[contains(@href,'guru99.com')]

3) Using OR & AND:
In OR expression, two conditions are used, whether 1st condition OR 2nd condition should be true. 
It is also applicable if any one condition is true or maybe both. 
Means any one condition should be true to find the element.

In the below XPath expression, it identifies the elements whose single or both 
conditions are true.

Xpath=//*[@type='submit' or @name='btnReset']

Highlighting both elements as “LOGIN ” element having attribute ‘type’ 
and “RESET” element having attribute ‘name’.

In AND expression, two conditions are used, both conditions should be true to find the element.
 It fails to find element if any one condition is false.

Xpath=//input[@type='submit' and @name='btnLogin']

In below expression, highlighting ‘LOGIN’ element as it having both attribute 
‘type’ and ‘name’.

In AND expression, two conditions are used, both conditions should be true to find the element. 
It fails to find element if any one condition is false.

Xpath=//input[@type='submit' and @name='btnLogin']

In below expression, highlighting ‘LOGIN’ element as it having both attribute ‘type’ and ‘name’.
 
 
 4) Xpath Starts-with
XPath starts-with() is a function used for finding the web element whose 
attribute value gets changed on refresh or by other dynamic operations on 
the webpage. In this method, the starting text of the attribute is matched 
to find the element whose attribute value changes dynamically. 
You can also find elements whose attribute value is static (not changes).

For example -: Suppose the ID of particular element changes dynamically like:

Id=” message12″

Id=” message345″

Id=” message8769″

and so on.. but the initial text is same. In this case, we use Start-with 
expression.

In the below expression, there are two elements with an id starting
 “message”(i.e., ‘User-ID must not be blank’ & ‘Password must not be blank’). 
 In below example, XPath finds those element whose ‘ID’ starting with ‘message’.

Xpath=//label[starts-with(@id,'message')]

5) XPath Text() Function
The XPath text() function is a built-in function of selenium webdriver 
which is used to locate elements based on text of a web element. It helps to find the exact text elements and it locates the elements within the set of text nodes. The elements to be located should be in string form.

In this expression, with text function, we find the element with 
exact text match as shown below. In our case, we find the element with 
text “UserID”.

Xpath=//td[text()='UserID']


 	 	