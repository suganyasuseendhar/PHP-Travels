package com.w3schools.utils;

import java.util.List;
import java.util.Set;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

import io.github.bonigarcia.wdm.WebDriverManager;

public class SuganyaBaseTest {

	public static WebDriver driver = null;
	
//this method will launch the browser	
	public void baseTestCases() {
		
		
	try {
		WebDriverManager.chromedriver().setup();
		WebDriver driver = new ChromeDriver();
		driver.get("String url");
		driver.manage().window().maximize();
		driver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);
	} catch (Exception e) {
		
		System.out.println("problem occurs while launching the browser");
		e.printStackTrace();
	}
	}
//this method will close all opened window in the particular driver

	public void quitBrowser() {
		
		driver.quit();
		
		
	}
	//this method will close the current working window
	public void closeBrowser() {
		try {
			driver.close();
		}

		catch (Exception ex) {
			ex.printStackTrace();
		}
	}
	
	//windows handling
	//this method will get the child window of the particular browser
	
	public void windowHandling() {
		try {
			String pWindow = driver.getWindowHandle();
			Set<String> windowHandle = driver.getWindowHandles();

			for (String adr : windowHandle) {

				if (!(pWindow.contentEquals(adr))) {
					driver.switchTo().window(adr);
				}
				System.out.println(adr);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	//this method will ger total size of the windows opened in a particular driver	
		public void sizeOfTheWindow() {
			try {
				
				String pWindow = driver.getWindowHandle();
				Set<String> windowHandle = driver.getWindowHandles();

				for (String adr : windowHandle) {

					if (!(pWindow.contentEquals(adr))) {
						driver.switchTo().window(adr);
					}
					System.out.println(adr);
				
				
			}
				int size = driver.getWindowHandles().size();
			}
			
			catch(Exception e) {
				
			}
			}
		
		


//frames concepts
		
		//method for find total number of frames inside the particular webpage
		public void totalFrameSize () {
			
			try {
				
			List<WebElement> frameSize = (List<WebElement>) driver.findElement(By.tagName("iframe"));
			frameSize.size();
				
			}
			catch(Exception ex) {
				
				ex.printStackTrace();
				
			}
			
		}

	//this method will return the frames into the default content
		
		public void defaultPageText() {
			
			try {
				driver.switchTo().defaultContent();
			} catch (Exception e) {
				
				e.printStackTrace();
			}
			
		}		
	//this method will give frames does not contain any name or id at the time we put frame size as 0, those time driver to enter normal html page 
    //to inside the frame it purely work based on the index
			
			public void frameBasedOnIndex(int index) {
				
				
			try {
				driver.switchTo().frame(index);
			} catch (Exception e) {
				
				e.printStackTrace();
			}	
			
			}
			
		//this method used for based on webelement
			
			public void basedOnWebElement(WebElement element) {
				
				
				try {
					driver.switchTo().frame(element);
				} catch (Exception e) {
					
					e.printStackTrace();
				}
				
				
			}
			
		//this method is used for based on nameORId
			
			public void nmaeOrId(String value) {
				
				
				try {
					driver.switchTo().frame(value);
				} catch (Exception e) {
					
					e.printStackTrace();
				}
				
				
			}
			
		}
		
		
		

		
		
		

	
